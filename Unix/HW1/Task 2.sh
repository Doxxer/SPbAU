#!/bin/bash
# 2. Вывести текущее число командой cal.
# (в Mac OS X, кстати, не работает - там cal не подсвечивает текущее число)

cal | grep -o "_.._.." | sed 's/_//g' | sed 's/\x08//g'

# Более понятно:

cal | grep -o "_\x08[\d\s]_\x08\d" | sed 's/_//g' | sed 's/\x08//g'

# cal работает хитро - он перед текущей датой ставит такую последовательность: нижнее подчеркивание, затем backspace (он же BS, он же ^H, он же \x08 в регулярном выражении - ascii код 8), затем либо пробел либо старшую цифру даты, затем опять нижнее подчеркивание, бекспейс и младшую цифру даты. Если вывести результат работы cal на экран - текст будет выводиться потоково и управляющий символ не напечатается, а "выполнится" и нижнее подчеркивание удалится. То же самое будет и при перенаправлении вывода cal > 1.txt. Если вывести 1.txt на экран командой cat, произойдет то же самое - однако если попробовать открыть этот файл нормальный текстовым редактором (Sublime Text 3, Notepad++ и пр.) - можно будет увидеть эти управляющие символы и "_". 
# Регулярное выражение простое (собственно это повторение описания форматирования): сначала нижнее подчеркивание, потом backspace, потом либо цифра либо пробел, потом опять пара нижнее подчеркивание+backspace и в конце цифра. (Ну или поменять все на точки - любой символ). Ключ -o выводит только то, что совпало.
# Однако это не совсем честно (пусть и в выводе на экран это работает) - мы нашли последовательность вместе с "_" и бекспейсами - их бы надо удалить, чтобы получить только число. Поэтому в конец можно приписать следующее:
# | sed 's/_//g' | sed 's/\x08//g'
# заменить на пустоту (т.е. удалить) нижние подчеркивания + бекспейсы. Вот так получится совсем честно: и на экране и в файле.